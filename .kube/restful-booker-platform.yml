---
apiVersion: v1
kind: Namespace
metadata:
  labels:
    kubernetes.io/metadata.name: restful-booker-platform
  name: restful-booker-platform

---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/name: rbp-assets
  name: rbp-assets
  namespace: restful-booker-platform
spec:
  ports:
    - name: http
      port: 3003
      protocol: TCP
      targetPort: 3003
  selector:
    app.kubernetes.io/name: rbp-assets
status:
  loadBalancer: {}

---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/name: rbp-auth
  name: rbp-auth
  namespace: restful-booker-platform
spec:
  ports:
    - name: http
      port: 3004
      protocol: TCP
      targetPort: 3004
  selector:
    app.kubernetes.io/name: rbp-auth
status:
  loadBalancer: {}

---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/name: rbp-booking
  name: rbp-booking
  namespace: restful-booker-platform
spec:
  ports:
    - name: http
      port: 3000
      protocol: TCP
      targetPort: 3000
  selector:
    app.kubernetes.io/name: rbp-booking
status:
  loadBalancer: {}

---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/name: rbp-branding
  name: rbp-branding
  namespace: restful-booker-platform
spec:
  ports:
    - name: http
      port: 3002
      protocol: TCP
      targetPort: 3002
  selector:
    app.kubernetes.io/name: rbp-branding
status:
  loadBalancer: {}

---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/name: rbp-message
  name: rbp-message
  namespace: restful-booker-platform
spec:
  ports:
    - name: http
      port: 3006
      protocol: TCP
      targetPort: 3006
  selector:
    app.kubernetes.io/name: rbp-message
status:
  loadBalancer: {}

---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/name: rbp-proxy
  name: rbp-proxy
  namespace: restful-booker-platform
spec:
  type: NodePort
  ports:
    - name: http
      port: 80
      protocol: TCP
      nodePort: 80
      targetPort: 80
  selector:
    app.kubernetes.io/name: rbp-proxy
status:
  loadBalancer: {}

---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/name: rbp-report
  name: rbp-report
  namespace: restful-booker-platform
spec:
  ports:
    - name: http
      port: 3005
      protocol: TCP
      targetPort: 3005
  selector:
    app.kubernetes.io/name: rbp-report
status:
  loadBalancer: {}

---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/name: rbp-room
  name: rbp-room
  namespace: restful-booker-platform
spec:
  ports:
    - name: http
      port: 3001
      protocol: TCP
      targetPort: 3001
  selector:
    app.kubernetes.io/name: rbp-room
status:
  loadBalancer: {}

---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: rbp-assets
  name: rbp-assets
  namespace: restful-booker-platform
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: rbp-assets
  strategy: {}
  template:
    metadata:
      labels:
        network.kubernetes.io/restful-booker-platform: "true"
        app.kubernetes.io/name: rbp-assets
    spec:
      containers:
        - name: rbp-assets
          image: mwinteringham/restfulbookerplatform_assets:1.6.24c7b22
          imagePullPolicy: Always
          ports:
            - containerPort: 3003
          resources: {}
          readinessProbe:
            httpGet:
              port: 3003
              path: /actuator/health
            initialDelaySeconds: 1
            periodSeconds: 5
            timeoutSeconds: 4
            successThreshold: 2
            failureThreshold: 3
      restartPolicy: Always
status: {}

---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: restful-booker-platform
  namespace: restful-booker-platform
spec:
  ingress:
    - from:
        - podSelector:
            matchLabels:
              network.kubernetes.io/restful-booker-platform: "true"
  podSelector:
    matchLabels:
      network.kubernetes.io/restful-booker-platform: "true"

---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: rbp-auth
  name: rbp-auth
  namespace: restful-booker-platform
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: rbp-auth
  strategy: {}
  template:
    metadata:
      labels:
        network.kubernetes.io/restful-booker-platform: "true"
        app.kubernetes.io/name: rbp-auth
    spec:
      containers:
        - name: rbp-auth
          image: mwinteringham/restfulbookerplatform_auth:1.6.24c7b22
          imagePullPolicy: Always
          ports:
            - containerPort: 3004
          resources: {}
          readinessProbe:
            httpGet:
              port: 3004
              path: /auth/actuator/health
            initialDelaySeconds: 1
            periodSeconds: 5
            timeoutSeconds: 4
            successThreshold: 2
            failureThreshold: 3
      restartPolicy: Always
status: {}

---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: rbp-booking
  name: rbp-booking
  namespace: restful-booker-platform
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: rbp-booking
  strategy: {}
  template:
    metadata:
      labels:
        network.kubernetes.io/restful-booker-platform: "true"
        app.kubernetes.io/name: rbp-booking
    spec:
      containers:
        - name: rbp-booking
          image: mwinteringham/restfulbookerplatform_booking:1.6.24c7b22
          imagePullPolicy: Always
          ports:
            - containerPort: 3000
          resources: {}
          readinessProbe:
            httpGet:
              port: 3000
              path: /booking/actuator/health
            initialDelaySeconds: 1
            periodSeconds: 5
            timeoutSeconds: 4
            successThreshold: 2
            failureThreshold: 3
      restartPolicy: Always
status: {}

---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: rbp-branding
  name: rbp-branding
  namespace: restful-booker-platform
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: rbp-branding
  strategy: {}
  template:
    metadata:
      labels:
        network.kubernetes.io/restful-booker-platform: "true"
        app.kubernetes.io/name: rbp-branding
    spec:
      containers:
        - name: rbp-branding
          image: mwinteringham/restfulbookerplatform_branding:1.6.24c7b22
          imagePullPolicy: Always
          ports:
            - containerPort: 3002
          resources: {}
          readinessProbe:
            httpGet:
              port: 3002
              path: /branding/actuator/health
            initialDelaySeconds: 1
            periodSeconds: 5
            timeoutSeconds: 4
            successThreshold: 2
            failureThreshold: 3
      restartPolicy: Always
status: {}

---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: rbp-message
  name: rbp-message
  namespace: restful-booker-platform
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: rbp-message
  strategy: {}
  template:
    metadata:
      labels:
        network.kubernetes.io/restful-booker-platform: "true"
        app.kubernetes.io/name: rbp-message
    spec:
      containers:
        - name: rbp-message
          image: mwinteringham/restfulbookerplatform_message:1.6.24c7b22
          imagePullPolicy: Always
          ports:
            - containerPort: 3006
          resources: {}
          readinessProbe:
            httpGet:
              port: 3006
              path: /message/actuator/health
            initialDelaySeconds: 1
            periodSeconds: 5
            timeoutSeconds: 4
            successThreshold: 2
            failureThreshold: 3
      restartPolicy: Always
status: {}

---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: rbp-proxy
  name: rbp-proxy
  namespace: restful-booker-platform
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: rbp-proxy
  strategy: {}
  template:
    metadata:
      labels:
        network.kubernetes.io/restful-booker-platform: "true"
        app.kubernetes.io/name: rbp-proxy
    spec:
      containers:
        - name: rbp-proxy
          image: mwinteringham/restfulbookerplatform_proxy:latest
          imagePullPolicy: Always
          ports:
            - containerPort: 80
          resources: {}
      restartPolicy: Always
status: {}

---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: rbp-report
  name: rbp-report
  namespace: restful-booker-platform
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: rbp-report
  strategy: {}
  template:
    metadata:
      labels:
        network.kubernetes.io/restful-booker-platform: "true"
        app.kubernetes.io/name: rbp-report
    spec:
      containers:
        - name: rbp-report
          image: mwinteringham/restfulbookerplatform_report:1.6.24c7b22
          imagePullPolicy: Always
          ports:
            - containerPort: 3005
          resources: {}
          readinessProbe:
            httpGet:
              port: 3005
              path: /report/actuator/health
            initialDelaySeconds: 1
            periodSeconds: 5
            timeoutSeconds: 4
            successThreshold: 2
            failureThreshold: 3
      restartPolicy: Always
status: {}

---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: rbp-room
  name: rbp-room
  namespace: restful-booker-platform
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: rbp-room
  strategy: {}
  template:
    metadata:
      labels:
        network.kubernetes.io/restful-booker-platform: "true"
        app.kubernetes.io/name: rbp-room
    spec:
      containers:
        - name: rbp-room
          image: mwinteringham/restfulbookerplatform_room:1.6.24c7b22
          imagePullPolicy: Always
          ports:
            - containerPort: 3001
          resources: {}
          readinessProbe:
            httpGet:
              port: 3001
              path: /room/actuator/health
            initialDelaySeconds: 1
            periodSeconds: 5
            timeoutSeconds: 4
            successThreshold: 2
            failureThreshold: 3
      restartPolicy: Always
status: {}

