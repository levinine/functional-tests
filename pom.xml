<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

	<modelVersion>4.0.0</modelVersion>

	<groupId>com.levi9</groupId>
	<artifactId>functional-tests</artifactId>
	<version>1.0.0-SNAPSHOT</version>
	<packaging>jar</packaging>

	<name>functional-tests</name>
	<description>Functional Tests</description>

	<organization>
		<name>Levi9</name>
		<url>https://www.levi9.com/</url>
	</organization>

	<properties>

		<!-- Java Version -->
		<java.version>23</java.version>

		<!-- Browser -->
		<browser>chrome</browser>
		<headless>false</headless>

		<!-- Selenium Grid -->
		<remote>false</remote>
		<remoteUrl>http://localhost:4444/wd/hub</remoteUrl>

		<!-- Tags -->
		<!--suppress UnresolvedMavenProperty -->
		<tags>(@sanity) and (not @skip and not @bug)</tags>

		<!-- Skip Generation of Clucumber Report -->
		<skipReports>false</skipReports>

		<!-- Environment -->
		<env>development</env>

		<!-- How many scenarios in parallel-->
		<parallelCount>3</parallelCount>

		<!-- Dependencies Versions -->
		<cucumber.version>7.30.0</cucumber.version>
		<assertj.version>3.27.6</assertj.version>
		<rest-assured.version>5.5.6</rest-assured.version>
		<commons-codec.version>1.19.0</commons-codec.version>
		<awaitility.version>4.3.0</awaitility.version>
		<selenium.version>4.36.0</selenium.version>
		<logback.version>1.5.19</logback.version>
		<lombok.version>1.18.40</lombok.version>
		<junit.version>4.13.2</junit.version>
		<slf4j.version>2.0.17</slf4j.version>
		<spring.version>6.2.12</spring.version>
		<apache.commons-lang3.version>3.19.0</apache.commons-lang3.version>
		<apache.commons-email.version>1.6.0</apache.commons-email.version>
		<apache.commons-io.version>2.20.0</apache.commons-io.version>
		<apache.pdfbox.version>3.0.6</apache.pdfbox.version>
		<jackson.version>2.20.0</jackson.version>
		<allure.version>2.29.1</allure.version>
		<javax.annotation-api.version>1.3.2</javax.annotation-api.version>

		<!-- Maven Plugins Versions -->
		<maven.compiler.version>3.14.0</maven.compiler.version>
		<maven.failsafe.plugin.version>3.5.4</maven.failsafe.plugin.version>
		<maven.surefire-junit4.plugin.version>3.5.4</maven.surefire-junit4.plugin.version>
		<cucable.version>1.16.0</cucable.version>
		<maven-cucumber-reporting.version>5.8.2</maven-cucumber-reporting.version>
		<maven.build.helper.plugin.version>3.6.1</maven.build.helper.plugin.version>
		<cluecumber.report.version>2.9.4</cluecumber.report.version>
		<openapi-generator.version>7.15.0</openapi-generator.version>

		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<spotbugs-annotations.version>4.9.8</spotbugs-annotations.version>
	</properties>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>io.qameta.allure</groupId>
				<artifactId>allure-bom</artifactId>
				<version>${allure.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<dependencies>

		<!-- JUnit -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>${junit.version}</version>
			<scope>test</scope>
		</dependency>

		<!-- Spring -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
			<version>${spring.version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<version>${spring.version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context-support</artifactId>
			<version>${spring.version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-jdbc</artifactId>
			<version>${spring.version}</version>
		</dependency>

		<!-- Cucumber -->
		<dependency>
			<groupId>io.cucumber</groupId>
			<artifactId>cucumber-java</artifactId>
			<version>${cucumber.version}</version>
		</dependency>

		<dependency>
			<groupId>io.cucumber</groupId>
			<artifactId>cucumber-junit</artifactId>
			<version>${cucumber.version}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>io.cucumber</groupId>
			<artifactId>cucumber-spring</artifactId>
			<version>${cucumber.version}</version>
			<scope>test</scope>
		</dependency>

		<!-- Logging -->
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-core</artifactId>
			<version>${logback.version}</version>
		</dependency>
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
			<version>${logback.version}</version>
		</dependency>

		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>${slf4j.version}</version>
		</dependency>

		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<version>${lombok.version}</version>
			<scope>provided</scope>
		</dependency>

		<!-- AssertJ -->
		<dependency>
			<groupId>org.assertj</groupId>
			<artifactId>assertj-core</artifactId>
			<version>${assertj.version}</version>
			<scope>test</scope>
		</dependency>

		<!-- REST-assured -->
		<dependency>
			<groupId>io.rest-assured</groupId>
			<artifactId>rest-assured</artifactId>
			<version>${rest-assured.version}</version>
			<exclusions>
				<exclusion>
					<groupId>commons-codec</groupId>
					<artifactId>commons-codec</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>commons-codec</groupId>
			<artifactId>commons-codec</artifactId>
			<version>${commons-codec.version}</version>
		</dependency>

		<dependency>
			<groupId>com.fasterxml.jackson.datatype</groupId>
			<artifactId>jackson-datatype-jdk8</artifactId>
			<version>${jackson.version}</version>
		</dependency>

		<dependency>
			<groupId>com.fasterxml.jackson.datatype</groupId>
			<artifactId>jackson-datatype-jsr310</artifactId>
			<version>${jackson.version}</version>
		</dependency>

		<dependency>
			<groupId>com.fasterxml.jackson.datatype</groupId>
			<artifactId>jackson-datatype-joda</artifactId>
			<version>${jackson.version}</version>
		</dependency>

		<!-- Awaitility -->
		<dependency>
			<groupId>org.awaitility</groupId>
			<artifactId>awaitility</artifactId>
			<version>${awaitility.version}</version>
		</dependency>

		<!-- Selenium -->
		<dependency>
			<groupId>org.seleniumhq.selenium</groupId>
			<artifactId>selenium-java</artifactId>
			<version>${selenium.version}</version>
		</dependency>

		<!-- Apache -->
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
			<version>${apache.commons-lang3.version}</version>
		</dependency>

		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-email</artifactId>
			<version>${apache.commons-email.version}</version>
		</dependency>

		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
			<version>${apache.commons-io.version}</version>
		</dependency>

		<dependency>
			<groupId>org.apache.pdfbox</groupId>
			<artifactId>pdfbox</artifactId>
			<version>${apache.pdfbox.version}</version>
		</dependency>

		<!-- Allure -->
		<dependency>
			<groupId>io.qameta.allure</groupId>
			<artifactId>allure-cucumber7-jvm</artifactId>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<groupId>io.cucumber</groupId>
					<artifactId>*</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<dependency>
			<groupId>io.qameta.allure</groupId>
			<artifactId>allure-junit4</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>javax.annotation</groupId>
			<artifactId>javax.annotation-api</artifactId>
			<version>${javax.annotation-api.version}</version>
		</dependency>
		<dependency>
			<groupId>com.github.spotbugs</groupId>
			<artifactId>spotbugs-annotations</artifactId>
			<version>${spotbugs-annotations.version}</version>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>${maven.compiler.version}</version>
				<configuration>
					<source>${java.version}</source>
					<target>${java.version}</target>
					<annotationProcessorPaths>
						<path>
							<groupId>org.projectlombok</groupId>
							<artifactId>lombok</artifactId>
							<version>${lombok.version}</version>
						</path>
					</annotationProcessorPaths>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.openapitools</groupId>
				<artifactId>openapi-generator-maven-plugin</artifactId>
				<version>${openapi-generator.version}</version>
				<executions>
					<execution>
						<id>generate-auth-client</id>
						<goals>
							<goal>generate</goal>
						</goals>
						<configuration>
							<inputSpec>${project.basedir}/src/main/resources/openapi/restfulbooker/auth-open-api.json</inputSpec>
							<modelPackage>restfulbooker.model.auth</modelPackage>
						</configuration>
					</execution>
					<execution>
						<id>generate-room-client</id>
						<goals>
							<goal>generate</goal>
						</goals>
						<configuration>
							<inputSpec>${project.basedir}/src/main/resources/openapi/restfulbooker/room-open-api.json</inputSpec>
							<modelPackage>restfulbooker.model.room</modelPackage>
						</configuration>
					</execution>
					<execution>
						<id>generate-report-client</id>
						<goals>
							<goal>generate</goal>
						</goals>
						<configuration>
							<inputSpec>${project.basedir}/src/main/resources/openapi/restfulbooker/report-open-api.json</inputSpec>
							<modelPackage>restfulbooker.model.report</modelPackage>
						</configuration>
					</execution>
					<execution>
						<id>generate-message-client</id>
						<goals>
							<goal>generate</goal>
						</goals>
						<configuration>
							<inputSpec>${project.basedir}/src/main/resources/openapi/restfulbooker/message-open-api.json</inputSpec>
							<modelPackage>restfulbooker.model.message</modelPackage>
						</configuration>
					</execution>
					<execution>
						<id>generate-branding-client</id>
						<goals>
							<goal>generate</goal>
						</goals>
						<configuration>
							<inputSpec>${project.basedir}/src/main/resources/openapi/restfulbooker/branding-open-api.json</inputSpec>
							<modelPackage>restfulbooker.model.branding</modelPackage>
						</configuration>
					</execution>
					<execution>
						<id>generate-booking-client</id>
						<goals>
							<goal>generate</goal>
						</goals>
						<configuration>
							<inputSpec>${project.basedir}/src/main/resources/openapi/restfulbooker/booking-open-api.json</inputSpec>
							<modelPackage>restfulbooker.model.booking</modelPackage>
						</configuration>
					</execution>
				</executions>
				<configuration>
					<output>${project.build.directory}/generated-sources</output>
					<generatorName>java</generatorName>
					<generateApis>false</generateApis>
					<generateModels>true</generateModels>
					<generateApiTests>false</generateApiTests>
					<generateApiDocumentation>false</generateApiDocumentation>
					<generateModelDocumentation>false</generateModelDocumentation>
					<generateModelTests>false</generateModelTests>
					<generateSupportingFiles>false</generateSupportingFiles>
					<configOptions>
						<library>webclient</library>
						<dateLibrary>java8</dateLibrary>
						<collectionType>list</collectionType>
						<enumPropertyNaming>legacy</enumPropertyNaming>
						<serializationLibrary>jackson</serializationLibrary>
						<sourceFolder>generated</sourceFolder>
						<additionalModelTypeAnnotations>@lombok.experimental.SuperBuilder</additionalModelTypeAnnotations>
					</configOptions>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-failsafe-plugin</artifactId>
				<version>${maven.failsafe.plugin.version}</version>
				<!-- Using surefire-junit4 provider as it executes individual test class and consequently re-runs failed tests. -->
				<!-- The provider surefire-junit47 executes all test classes and re-runs failed tests afterward.  -->
				<!-- With surefire-junit47 it happened that not all tests are executed after re-run occurred, or their reports were cleared.-->
				<dependencies>
					<dependency>
						<groupId>org.apache.maven.surefire</groupId>
						<artifactId>surefire-junit4</artifactId>
						<version>${maven.surefire-junit4.plugin.version}</version>
					</dependency>
				</dependencies>
				<executions>
					<execution>
						<id>Run parallel tests</id>
						<phase>integration-test</phase>
						<goals>
							<goal>integration-test</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<!-- How many scenarios to run in parallel -->
					<forkCount>${parallelCount}</forkCount>
					<!-- How many times to retry failing test -->
					<rerunFailingTestsCount>2</rerunFailingTestsCount>
					<!-- Run all tests regardless of their result, otherwise the plugin execution will stop on failing tests -->
					<!-- ! However, with this, the build will not fail in case of failing tests ! -->
					<testFailureIgnore>true</testFailureIgnore>
					<!-- If there are no tests executed do not fail build -->
					<failIfNoSpecifiedTests>false</failIfNoSpecifiedTests>
					<!-- Use existing processes or create new ones -->
					<reuseForks>true</reuseForks>
					<argLine>-Dfile.encoding=UTF-8</argLine>
					<excludes>
						<exclude>**/DryRunRunnerIT.java</exclude>
					</excludes>
				</configuration>
			</plugin>
			<!-- Because Cucable is set to auto generate runners in target, to them as test sources build-helper-maven-plugin is used -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
				<version>${maven.build.helper.plugin.version}</version>
				<executions>
					<execution>
						<id>add-test-source</id>
						<phase>generate-test-sources</phase>
						<goals>
							<goal>add-test-source</goal>
						</goals>
						<configuration>
							<sources>
								<source>${project.build.directory}/cucumber/cucable-generated/runners</source>
							</sources>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<!-- Cucable plugin is used to auto generate runners based on features -->
			<plugin>
				<groupId>com.trivago.rta</groupId>
				<artifactId>cucable-plugin</artifactId>
				<version>${cucable.version}</version>
				<executions>
					<execution>
						<id>generate-test-resources</id>
						<phase>generate-test-resources</phase>
						<goals>
							<goal>parallel</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<!-- This can be either a Java class file or a text based template -->
					<sourceRunnerTemplateFile>src/test/resources/cucable.template</sourceRunnerTemplateFile>
					<!-- Process all features in the given directory -->
					<sourceFeatures>src/test/resources/features</sourceFeatures>
					<generatedFeatureDirectory>${project.build.directory}/cucumber/cucable-generated/features</generatedFeatureDirectory>
					<generatedRunnerDirectory>${project.build.directory}/cucumber/cucable-generated/runners</generatedRunnerDirectory>
					<!-- Default parallelization mode is scenarios, but it can be changed to features -->
					<parallelizationMode>scenarios</parallelizationMode>
					<numberOfTestRuns>1</numberOfTestRuns>
					<includeScenarioTags>${tags}</includeScenarioTags>
					<!-- Possible log levels default|compact|minimal|off -->
					<logLevel>compact</logLevel>
					<desiredNumberOfRunners>-1</desiredNumberOfRunners>
				</configuration>
			</plugin>
			<plugin>
				<groupId>com.trivago.rta</groupId>
				<artifactId>cluecumber-report-plugin</artifactId>
				<version>${cluecumber.report.version}</version>
				<executions>
					<execution>
						<id>report</id>
						<phase>post-integration-test</phase>
						<goals>
							<goal>reporting</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<skip>${skipReports}</skip>
					<sourceJsonReportDirectory>${project.build.directory}/cucumber/json</sourceJsonReportDirectory>
					<generatedHtmlReportDirectory>${project.build.directory}/cucumber/cluecumber-report</generatedHtmlReportDirectory>
					<customPageTitle>Functional Tests Report</customPageTitle>
					<customParametersFile>${project.build.directory}/test-classes/application-${env}.properties</customParametersFile>
				</configuration>
			</plugin>
			<plugin>
				<groupId>net.masterthought</groupId>
				<artifactId>maven-cucumber-reporting</artifactId>
				<version>${maven-cucumber-reporting.version}</version>
				<executions>
					<execution>
						<id>execution</id>
						<phase>verify</phase>
						<goals>
							<goal>generate</goal>
						</goals>
						<configuration>
							<skip>${skipReports}</skip>
							<checkBuildResult>true</checkBuildResult>
							<projectName>functional-tests</projectName>
							<outputDirectory>${project.build.directory}/cucumber</outputDirectory>
							<jsonFiles>
								<param>**/json/*.json</param>
							</jsonFiles>
							<skipEmptyJSONFiles>true</skipEmptyJSONFiles>
							<mergeFeaturesById>true</mergeFeaturesById>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
</project>